
/*
************************************************************************************************************************
*
************************************************************************************************************************
*/

#ifndef LED_H
#define LED_H


/*
************************************************************************************************************************
*           INCLUDE FILES
************************************************************************************************************************
*/

#include <stdint.h>
#include "lpc177x_8x_gpio.h"


/*
************************************************************************************************************************
*           DO NOT CHANGE THESE DEFINES
************************************************************************************************************************
*/

#define BLACK       ((const color_t){0x00, 0x00, 0x00})
#define WHITE       ((const color_t){0xFF, 0xFF, 0xFF})
#define RED         ((const color_t){0xFF, 0x00, 0x00})
#define GREEN       ((const color_t){0x00, 0xFF, 0x00})
#define BLUE        ((const color_t){0x00, 0x00, 0xFF})
#define YELLOW      ((const color_t){0xFF, 0xFF, 0x00})
#define MAGENTA     ((const color_t){0xFF, 0x00, 0xFF})
#define CYAN        ((const color_t){0x00, 0xFF, 0xFF})


/*
************************************************************************************************************************
*           CONFIGURATION DEFINES
************************************************************************************************************************
*/

// leds amount
#define MAX_LEDS    4

// defines the leds pwm clock in Hertz
#define LEDS_PWM_CLOCK_Hz   20000

// defines if LED_TURN_ON_WITH_ZERO or LED_TURN_ON_WITH_ONE
#define LED_TURN_ON_WITH_ZERO

// I/O macros configuration
#define CONFIG_PIN_OUTPUT(port, pin)    GPIO_SetDir((port), (1 << (pin)), GPIO_DIRECTION_OUTPUT)
#define SET_PIN(port, pin)              GPIO_SetValue((port), (1 << (pin)))
#define CLR_PIN(port, pin)              GPIO_ClearValue((port), (1 << (pin)))


/*
************************************************************************************************************************
*           DATA TYPES
************************************************************************************************************************
*/

typedef struct COLOR_T {
    uint8_t r, g, b;
} color_t;

typedef struct LED_T {
    uint8_t control;
    uint8_t portR, pinR;
    uint8_t portG, pinG;
    uint8_t portB, pinB;
    color_t color;
    uint16_t time_on, time_off;
} led_t;


/*
************************************************************************************************************************
*           GLOBAL VARIABLES
************************************************************************************************************************
*/

void led_init(led_t *led);
void led_set_color(led_t *led, const color_t color);
void led_blink(led_t *led, uint16_t time_on_ms, uint16_t time_off_ms);
void leds_clock(void);


/*
************************************************************************************************************************
*           MACRO'S
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           FUNCTION PROTOTYPES
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           CONFIGURATION ERRORS
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           END HEADER
************************************************************************************************************************
*/

#endif
