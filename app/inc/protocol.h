
/*
************************************************************************************************************************
*
************************************************************************************************************************
*/

#ifndef PROTOCOL_H
#define PROTOCOL_H


/*
************************************************************************************************************************
*           INCLUDE FILES
************************************************************************************************************************
*/

#include <stdint.h>
#include "comm.h"


/*
************************************************************************************************************************
*           DO NOT CHANGE THESE DEFINES
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           CONFIGURATION DEFINES
************************************************************************************************************************
*/

#define PROTOCOL_MAX_COMMANDS           20

// error messages configuration
#define MESSAGE_COMMAND_NOT_FOUND       "not found"
#define MESSAGE_MANY_ARGUMENTS          "many arguments"
#define MESSAGE_FEW_ARGUMENTS           "few arguments"
#define MESSAGE_INVALID_ARGUMENT        "invalid argument"

// defines the function to send responses to sender
#define SEND_TO_SENDER(id,msg,len)      comm_webgui_send(msg,len)


/*
************************************************************************************************************************
*           DATA TYPES
************************************************************************************************************************
*/

// This struct is used on callbacks argument
typedef struct PROTO_T {
    char **list;
    uint32_t list_count;
    char *response;
    uint32_t response_size;
} proto_t;

// This struct must be used to pass a message to protocol parser
typedef struct MSG_T {
    int sender_id;
    char *data;
    uint32_t data_size;
} msg_t;


/*
************************************************************************************************************************
*           GLOBAL VARIABLES
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           MACRO'S
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           FUNCTION PROTOTYPES
************************************************************************************************************************
*/

void protocol_parse(msg_t *msg);
void protocol_add_command(const char *command, void (*callback)(proto_t *proto));
void protocol_response(const char *response, proto_t *proto);
void protocol_remove_commands(void);


/*
************************************************************************************************************************
*           CONFIGURATION ERRORS
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           END HEADER
************************************************************************************************************************
*/

#endif
