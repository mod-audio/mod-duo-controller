
/*
************************************************************************************************************************
*
************************************************************************************************************************
*/

#ifndef SERIAL_H
#define SERIAL_H


/*
************************************************************************************************************************
*           INCLUDE FILES
************************************************************************************************************************
*/

#include <stdint.h>


/*
************************************************************************************************************************
*           DO NOT CHANGE THESE DEFINES
************************************************************************************************************************
*/

#define SERIAL0     0
#define SERIAL1     1


/*
************************************************************************************************************************
*           CONFIGURATION DEFINES
************************************************************************************************************************
*/

// buffer size
#define SERIAL_RX_BUFFER_SIZE   512
#define SERIAL_TX_BUFFER_SIZE   128

// baud-rates
#define SERIAL0_BAUDRATE        115200
#define SERIAL1_BAUDRATE        115200

// priorities
// The serial ISR use freeRTOS API so the priorities values must be
// equal or greater than configMAX_SYSCALL_INTERRUPT_PRIORITY
#define SERIAL0_PRIORITY        6
#define SERIAL1_PRIORITY        7


/*
************************************************************************************************************************
*           DATA TYPES
************************************************************************************************************************
*/

typedef struct SERIAL_MSG_T {
    uint8_t port;
    uint8_t *data;
    uint32_t data_size;
} serial_msg_t;


/*
************************************************************************************************************************
*           GLOBAL VARIABLES
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           MACRO'S
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           FUNCTION PROTOTYPES
************************************************************************************************************************
*/

void serial_init(void);
void serial_set_callback(uint8_t port, void (*receive_cb)(serial_msg_t *msg));
uint32_t serial_send(uint8_t port, uint8_t *txbuf, uint32_t buflen);
uint32_t serial_read(uint8_t port, uint8_t *rxbuf, uint32_t buflen);

// handlers
void UART0_IRQHandler(void);
void UART1_IRQHandler(void);
void UART2_IRQHandler(void);


/*
************************************************************************************************************************
*           CONFIGURATION ERRORS
************************************************************************************************************************
*/


/*
************************************************************************************************************************
*           END HEADER
************************************************************************************************************************
*/

#endif
